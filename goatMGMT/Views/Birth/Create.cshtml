@model goatMGMT.Models.BirthViewModel

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container">
    <h2>Create</h2>


    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true)

        <fieldset class="form-horizontal">
            <legend>Birth</legend>
            
            @Html.HiddenFor(m => m.birth.breed_id)
            <div class="control-group">
                @Html.LabelFor(m => m.offspringChoice, new { @class = "control-label" })<small> (Required)</small>
                <div class="controls">
                    @Html.DropDownList("offspringChoice", (IEnumerable<SelectListItem>)ViewData["offspringDrop"], new { @class = "form-control" })
                </div>
            </div>

            <div class="control-group">
                @Html.LabelFor(model => model.birth.score, new { @class = "control-label" })<small> (Optional)</small>
                <div class="controls">
                    @Html.TextBoxFor(model => model.birth.score, new { @class = "form-control", @placeholder="Enter the birth score" })
                    @Html.ValidationMessageFor(model => model.birth.score, null, new { @class = "help-inline" })
                </div>
            </div>

            <div class="control-group">
                @Html.LabelFor(model => model.birth.alive, new { @class = "control-label" })<small> (Optional)</small>
                <div class="controls">
                    @Html.TextBoxFor(model => model.birth.alive, new { @class = "form-control" , @placeholder="How many were alive from this breeding?"})
                    @Html.ValidationMessageFor(model => model.birth.alive, null, new { @class = "help-inline" })
                </div>
            </div>

            <div class="control-group">
                @Html.LabelFor(model => model.birth.born, new { @class = "control-label" })<small> (Optional)</small>
                <div class="controls">
                    @Html.TextBoxFor(model => model.birth.born, new { @class = "form-control" , @placeholder="How many were born from this breeding?"})
                    @Html.ValidationMessageFor(model => model.birth.born, null, new { @class = "help-inline" })
                </div>
            </div>

            <div class="control-group">
                @Html.LabelFor(model => model.birth.notes, new { @class = "control-label" })<small> (Optional)</small>
                <div class="controls">
                    @Html.TextAreaFor(model => model.birth.notes, new { @class = "form-control", @style = "max-width:100%; min-width:100%; min-height:71px", @placeholder="Enter additional information here"})
                    @Html.ValidationMessageFor(model => model.birth.notes, null, new { @class = "help-inline" })
                </div>
            </div>

            <div class="form-actions no-color" style="padding-bottom:15px">
                <input type="submit" value="Create" class="btn btn-success" style="margin-top:15px;" />
                @Html.ActionLink("Cancel", "Index", "Birth", new {id = Model.birth.breed_id }, new { @class = "btn btn-danger", @style = "margin-top:15px;" })
            </div>
        </fieldset>
    }

</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

