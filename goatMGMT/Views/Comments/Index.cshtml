@model IEnumerable<goatMGMT.Models.Comment>

@{
    ViewBag.Title = "Index";
}
<div class="container" style="padding-bottom: 15px;">
<h2>Comments</h2>

    <div class="table-responsive">
        <table class="table table-striped">
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.email)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.date_sent)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.subject)
                </th>
                <th>
                    Message Preview
                </th>
                <th></th>
            </tr>

            @foreach (var item in Model) {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.email)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.date_sent)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.subject)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.comment1)
                </td>
                <td>
                    @Html.ActionLink("Details", "Details", new { id=item.id }) |
                    @Html.ActionLink("Delete", "Delete", new { id=item.id })
                </td>
            </tr>
            }

        </table>
    </div>
</div>

<script>
    function doCheck() {
        var checkboxes = new Array();
        checkboxes = document.getElementsByName('myCheckBoxes');
        var check = document.getElementsByName("masterCheck").checked;
        for (var i = 0; i < checkboxes.length; i++) {
            checkboxes[i].checked = check;
        }
    }
    
    function getCheckedBoxes() {
        var checkboxes = document.getElementsByName("myCheckBoxes");
        var checkboxesChecked = [];
        // loop over them all
        for (var i = 0; i < checkboxes.length; i++) {
            // And stick the checked ones onto an array...
            if (checkboxes[i].checked) {
                checkboxesChecked.push(checkboxes[i]);
            }
        }
        // Return the array if it is non-empty, or null
        return checkboxesChecked.length > 0 ? checkboxesChecked : null;
    }
</script>
