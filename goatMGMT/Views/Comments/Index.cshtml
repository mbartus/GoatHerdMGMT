@model IEnumerable<goatMGMT.Models.Comment>

@{
    ViewBag.Title = "Index";
}
<div class="container"
<h2>Index</h2>

<table class="table">
    <tr>
        <th>
            Subject
        </th>
        <th>
            Comment
        </th>
        <th>
            Date Sent
        </th>
        <th></th>
        <th>
            <label>
                <input name="masterCheck" type="checkbox" onclick="doCheck()"> Check All
            </label>
        </th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.subject)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.comment1)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.date_sent)
        </td>
        <td>
            @Html.ActionLink("Details", "Details", new { id=item.id }) |
            @Html.ActionLink("Delete", "Delete", new { id=item.id })
        </td>
        <td>
            <label>
                <input name="myCheckBoxes" type="checkbox">
            </label>
        </td>
    </tr>
}

</table>
    <button>Delete</button>
</div>

<!-- Modal -->
<div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="Are you sure?" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="myModalLabel">Are you sure?</h4>
            </div>
            <div class="modal-body">
                This data will be permenately deleted and you will not be able to recover it.
            </div>
            <div class="modal-footer">
                <input type="submit" value="Delete" class="btn btn-danger" data-toggle="modal" data-target="#myModal" />
                <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
            </div>
        </div>
    </div>
</div>

<script>
    function doCheck() {
        var checkboxes = new Array();
        checkboxes = document.getElementsByName('myCheckBoxes');
        var check = document.getElementsByName("masterCheck").checked;
        for (var i = 0; i < checkboxes.length; i++) {
            checkboxes[i].checked = check;
        }
    }
    
    function getCheckedBoxes() {
        var checkboxes = document.getElementsByName("myCheckBoxes");
        var checkboxesChecked = [];
        // loop over them all
        for (var i = 0; i < checkboxes.length; i++) {
            // And stick the checked ones onto an array...
            if (checkboxes[i].checked) {
                checkboxesChecked.push(checkboxes[i]);
            }
        }
        // Return the array if it is non-empty, or null
        return checkboxesChecked.length > 0 ? checkboxesChecked : null;
    }
</script>
