@model goatMGMT.Models.SummaryViewModel

@{
    ViewBag.Title = "Herd Summary";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="container">
    <h2 style="margin-bottom:15px;">Herd Summary</h2>
    @Html.ActionLink("Export to Excel", "Export", "Home", new{}, new{@class="btn btn-success", @style=""})
    <p style="margin-bottom:15px;">Download an excel sheet with all of your information filled in</p>
    <div class="row">
        <div class="col-md-12">
            <h4>Number of Total/Active Sire and Dams</h4>
            <div id="siredamgraph" style="width: 100%; font-size:12px; height:250px; margin-bottom:15px;"></div>
        </div>
    </div>
    <div class="row info-block">
        <div class="col-md-12">
            <h4>Offspring Born and Offspring Weaned</h4>
            <div id="Offspringgraph" style="width: 100%; font-size:12px; height:250px; margin-bottom:15px;"></div>
        </div>
    </div>
    <div class="row info-block">
        <div class="col-md-12">
            <h4>Average Birth Weights and Weaning Weights</h4>
            <div id="weightgraph" style="width: 100%; font-size:12px; height:250px; margin-bottom:15px;"></div>
        </div>
    </div>
    <div class="row info-block">
        <div class="col-md-12">
            <h4>Average Daily Gain Comparisons</h4>
            <div id="adggraph" style="width: 100%; font-size:12px; height:450px; margin-bottom:15px;"></div>
        </div>
    </div>
    <div class="row info-block">
        <div class="col-md-12">
            <h4>Multiple Birth Statistics</h4>
            <div id="birthgraph" style="width: 100%; font-size:12px; height:350px; margin-bottom:15px;"></div>
        </div>
    </div>
    <div class="row info-block">
        <div class="col-md-12">
            <h4>Mating Count and Birthing Count</h4>
            <div id="breedinggraph" style="width: 100%; font-size:12px; height:150px; margin-bottom:15px;"></div>
        </div>
    </div>
    <div class="row info-block">
        <div class="col-md-12">
            <h4>Birth Survival Rate</h4>
            <div id="survivalgraph" style="width: 100%; font-size:12px; height:150px; margin-bottom:15px;"></div>
        </div>
    </div>
    <div class="row info-block">
        <div class="col-md-12">
            <h4>Dam Parity Count and Average Birth Weight</h4>
            <div id="paritygraph" style="width: 100%; font-size:12px; height:350px; margin-bottom:15px;"></div>
        </div>
    </div>
</div>

<script type="text/javascript" src="http://www.amcharts.com/lib/3/amcharts.js"></script>
<script type="text/javascript" src="http://www.amcharts.com/lib/3/serial.js"></script>
<script type="text/javascript" src="http://www.amcharts.com/lib/3/themes/none.js"></script>
<script type="text/javascript">
    $(document).ready(function () {
        var chart = AmCharts.makeChart("siredamgraph", {
            "type": "serial",
            "dataProvider": [{
                "country": "USA",
                "year2004": 3.5,
                "year2005": 4.2
            }, {
                "country": "UK",
                "year2004": 1.7,
                "year2005": 3.1
            }, {
                "country": "Canada",
                "year2004": 2.8,
                "year2005": 2.9
            }, {
                "country": "Japan",
                "year2004": 2.6,
                "year2005": 2.3
            }, {
                "country": "France",
                "year2004": 1.4,
                "year2005": 2.1
            }, {
                "country": "Brazil",
                "year2004": 2.6,
                "year2005": 4.9
            }, {
                "country": "Sire",
                "year2004": @Model.totalSire,
                "year2005": @Model.activeSire
            }, {
                "country": "Dam",
                "year2004": @Model.totalDam,
                "year2005": @Model.activeDam
            }],
            "valueAxes": [{
                "unit": "%",
                "position": "left",
                "title": "GDP growth rate",
            }],
            "startDuration": 1,
            "graphs": [{
                "balloonText": "GDP grow in [[category]] (2004): <b>[[value]]</b>",
                "fillAlphas": 0.9,
                "lineAlpha": 0.2,
                "title": "2004",
                "type": "column",
                "valueField": "year2004"
            }, {
                "balloonText": "GDP grow in [[category]] (2005): <b>[[value]]</b>",
                "fillAlphas": 0.9,
                "lineAlpha": 0.2,
                "title": "2005",
                "type": "column",
                "clustered":false,
                "columnWidth":0.5,
                "valueField": "year2005"
            }],
            "plotAreaFillAlphas": 0.1,
            "categoryField": "country",
            "categoryAxis": {
                "gridPosition": "start"
            },
            "export": {
                "enabled": true,
                "libs": {
                    "path": "http://www.amcharts.com/lib/3/plugins/export/libs/"
                }
            }

        });
    var chart2 = AmCharts.makeChart("Offspringgraph", {
        "type": "serial",
        "pathToImages": "http://cdn.amcharts.com/lib/3/images/",
        "categoryField": "category",
        "rotate": true,
        "startDuration": 1,
        "categoryAxis": {
            "gridPosition": "start",
            "position": "left"
        },
        "trendLines": [],
        "graphs": [
            {
                "balloonText": "Born:[[value]]",
                "fillAlphas": 0.8,
                "id": "AmGraph-1",
                "lineAlpha": 0.2,
                "title": "Income",
                "type": "column",
                "valueField": "income"
            },
            {
                "balloonText": "Weaned:[[value]]",
                "fillAlphas": 0.8,
                "id": "AmGraph-2",
                "lineAlpha": 0.2,
                "title": "Expenses",
                "type": "column",
                "valueField": "expenses"
            }
        ],
        "guides": [],
        "valueAxes": [
            {
                "id": "ValueAxis-1",
                "position": "top",
                "axisAlpha": 0
            }
        ],
        "allLabels": [],
        "amExport": {
            "right": 20,
            "top": 20
        },
        "balloon": {},
        "titles": [],
        "dataProvider": [
            {
                "category": "Total",
                "income": @Model.totalBorn,
                "expenses": @Model.totalWeaned
            },
            {
                "category": "Male",
                "income": @Model.malesBorn,
                "expenses": @Model.malesWeaned
            },
            {
                "category": "Female",
                "income": @Model.femalesBorn,
                "expenses": @Model.femalesWeaned
            }
        ]
    });
    var chart3 = AmCharts.makeChart("weightgraph", {
        "type": "serial",
        "pathToImages": "http://cdn.amcharts.com/lib/3/images/",
        "categoryField": "category",
        "rotate": true,
        "startDuration": 1,
        "categoryAxis": {
            "gridPosition": "start",
            "position": "left"
        },
        "trendLines": [],
        "graphs": [
            {
                "balloonText": "Birth:[[value]]",
                "fillAlphas": 0.8,
                "id": "AmGraph-1",
                "lineAlpha": 0.2,
                "title": "Income",
                "type": "column",
                "valueField": "income"
            },
            {
                "balloonText": "Weaning:[[value]]",
                "fillAlphas": 0.8,
                "id": "AmGraph-2",
                "lineAlpha": 0.2,
                "title": "Expenses",
                "type": "column",
                "valueField": "expenses"
            }
        ],
        "guides": [],
        "valueAxes": [
            {
                "id": "ValueAxis-1",
                "position": "top",
                "axisAlpha": 0
            }
        ],
        "allLabels": [],
        "amExport": {
            "right": 20,
            "top": 20
        },
        "balloon": {},
        "titles": [],
        "dataProvider": [
            {
                "category": "Total",
                "income": @Model.avgBW,
                "expenses": @Model.avgWW
            },
            {
                "category": "Male",
                "income": @Model.maleAvgBW,
                "expenses": @Model.maleAvgWW
            },
            {
                "category": "Female",
                "income": @Model.femaleAvgBW,
                "expenses": @Model.femaleAvgWW
            }
        ]
    });
    var chart4 = AmCharts.makeChart("birthgraph", {
        "type": "serial",
        "pathToImages": "http://cdn.amcharts.com/lib/3/images/",
        "categoryField": "category",
        "rotate": true,
        "startDuration": 1,
        "categoryAxis": {
            "gridPosition": "start",
            "position": "left"
        },
        "trendLines": [],
        "graphs": [
            {
                "balloonText": "Count:[[value]]",
                "fillAlphas": 0.8,
                "id": "AmGraph-1",
                "lineAlpha": 0.2,
                "title": "Income",
                "type": "column",
                "valueField": "income"
            },
            {
                "balloonText": "Avg Birth Weight:[[value]]",
                "fillAlphas": 0.8,
                "id": "AmGraph-2",
                "lineAlpha": 0.2,
                "title": "Expenses",
                "type": "column",
                "valueField": "expenses"
            },
             {
                 "balloonText": "Avg Weaning Weight:[[value]]",
                 "fillAlphas": 0.8,
                 "id": "AmGraph-2",
                 "lineAlpha": 0.2,
                 "title": "Expenses",
                 "type": "column",
                 "valueField": "ww"
             }
        ],
        "guides": [],
        "valueAxes": [
            {
                "id": "ValueAxis-1",
                "position": "top",
                "axisAlpha": 0
            }
        ],
        "allLabels": [],
        "amExport": {
            "right": 20,
            "top": 20
        },
        "balloon": {},
        "titles": [],
        "dataProvider": [
            {
                "category": "Single",
                "income": @Model.singleBirthCount,
                "expenses": @Model.singleBWAvg,
                "ww": @Model.singleWWAvg
            },
            {
                "category": "Twins",
                "income": @Model.twinBirthCount,
                "expenses": @Model.twinBWAvg,
                "ww": @Model.twinWWAvg
            },
            {
                "category": "Triplets",
                "income": @Model.tripletBirthCount,
                "expenses": @Model.tripletBWAvg,
                "ww": @Model.tripletWWAvg
            },
            {
                "category": "Quad +",
                "income": @Model.quadBirthCount,
                "expenses": @Model.quadBWAvg,
                "ww": @Model.quadWWAvg
            }
        ]
    });
    var chart5 = AmCharts.makeChart("breedinggraph", {
        "type": "serial",
        "pathToImages": "http://cdn.amcharts.com/lib/3/images/",
        "categoryField": "category",
        "rotate": true,
        "startDuration": 1,
        "categoryAxis": {
            "gridPosition": "start",
            "position": "left"
        },
        "trendLines": [],
        "graphs": [
            {
                "balloonText": "Matings:[[value]]",
                "fillAlphas": 0.8,
                "id": "AmGraph-1",
                "lineAlpha": 0.2,
                "title": "Income",
                "type": "column",
                "valueField": "income"
            },
            {
                "balloonText": "Offspring:[[value]]",
                "fillAlphas": 0.8,
                "id": "AmGraph-2",
                "lineAlpha": 0.2,
                "title": "Expenses",
                "type": "column",
                "valueField": "expenses"
            }
        ],
        "guides": [],
        "valueAxes": [
            {
                "id": "ValueAxis-1",
                "position": "top",
                "axisAlpha": 0
            }
        ],
        "allLabels": [],
        "amExport": {
            "right": 20,
            "top": 20
        },
        "balloon": {},
        "titles": [],
        "dataProvider": [
            {
                "category": "Results",
                "income": @Model.matingCount,
                "expenses": @Model.kiddingCount
            }
        ]
    });
    var chart6 = AmCharts.makeChart("survivalgraph", {
        "type": "serial",
        "pathToImages": "http://cdn.amcharts.com/lib/3/images/",
        "categoryField": "category",
        "rotate": true,
        "startDuration": 1,
        "categoryAxis": {
            "gridPosition": "start",
            "position": "left"
        },
        "trendLines": [],
        "graphs": [
            {
                "balloonText": "Born:[[value]]",
                "fillAlphas": 0.8,
                "id": "AmGraph-1",
                "lineAlpha": 0.2,
                "title": "Income",
                "type": "column",
                "valueField": "income"
            },
            {
                "balloonText": "Alive:[[value]]",
                "fillAlphas": 0.8,
                "id": "AmGraph-2",
                "lineAlpha": 0.2,
                "title": "Expenses",
                "type": "column",
                "valueField": "expenses"
            }
        ],
        "guides": [],
        "valueAxes": [
            {
                "id": "ValueAxis-1",
                "position": "top",
                "axisAlpha": 0
            }
        ],
        "allLabels": [],
        "amExport": {
            "right": 20,
            "top": 20
        },
        "balloon": {},
        "titles": [],
        "dataProvider": [
            {
                "category": "Offspring",
                "income": @Model.kidsBornCount,
                "expenses": @Model.kidsAliveCount
            }
        ]
    });
    var chart7 = AmCharts.makeChart("paritygraph", {
        "type": "serial",
        "pathToImages": "http://cdn.amcharts.com/lib/3/images/",
        "categoryField": "category",
        "rotate": true,
        "startDuration": 1,
        "categoryAxis": {
            "gridPosition": "start",
            "position": "left"
        },
        "trendLines": [],
        "graphs": [
            {
                "balloonText": "Dams:[[value]]",
                "fillAlphas": 0.8,
                "id": "AmGraph-1",
                "lineAlpha": 0.2,
                "title": "Income",
                "type": "column",
                "valueField": "income"
            },
            {
                "balloonText": "Avg Birth Weight:[[value]]",
                "fillAlphas": 0.8,
                "id": "AmGraph-2",
                "lineAlpha": 0.2,
                "title": "Expenses",
                "type": "column",
                "valueField": "expenses"
            }
        ],
        "guides": [],
        "valueAxes": [
            {
                "id": "ValueAxis-1",
                "position": "top",
                "axisAlpha": 0
            }
        ],
        "allLabels": [],
        "amExport": {
            "right": 20,
            "top": 20
        },
        "balloon": {},
        "titles": [],
        "dataProvider": [
            {
                "category": "1",
                "income": @Model.damParity1Count,
                "expenses": @Model.damParity1BW
            },
            {
                "category": "2",
                "income": @Model.damParity2Count,
                "expenses": @Model.damParity2BW
            },
            {
                "category": "3",
                "income": @Model.damParity3Count,
                "expenses": @Model.damParity3BW
            },
            {
                "category": "4+",
                "income": @Model.damParity4Count,
                "expenses": @Model.damParity4BW
            }
        ]
    });
    var chart8 = AmCharts.makeChart("adggraph", {
        "type": "serial",
        "pathToImages": "http://cdn.amcharts.com/lib/3/images/",
        "categoryField": "category",
        "rotate": true,
        "startDuration": 1,
        "categoryAxis": {
            "gridPosition": "start",
            "position": "left"
        },
        "trendLines": [],
        "graphs": [
            {
                "balloonText": "My Herd:[[value]]",
                "fillAlphas": 0.8,
                "id": "AmGraph-1",
                "lineAlpha": 0.2,
                "title": "Income",
                "type": "column",
                "valueField": "income"
            },
            {
                "balloonText": "All Herds:[[value]]",
                "fillAlphas": 0.8,
                "id": "AmGraph-2",
                "lineAlpha": 0.2,
                "title": "Expenses",
                "type": "column",
                "valueField": "expenses"
            }
        ],
        "guides": [],
        "valueAxes": [
            {
                "id": "ValueAxis-1",
                "position": "top",
                "axisAlpha": 0
            }
        ],
        "allLabels": [],
        "amExport": {
            "right": 20,
            "top": 20
        },
        "balloon": {},
        "titles": [],
        "dataProvider": [
            {
                "category": "Weaning",
                "income": @Model.ADGWeaning,
                "expenses": @Model.allADGWeaning
            },
            {
                "category": "Weaning(Male)",
                "income": @Model.maleADGWeaning,
                "expenses": @Model.allMaleADGWeaning
            },
            {
                "category": "Weaning(Female)",
                "income": @Model.femaleADGWeaning,
                "expenses": @Model.allFemaleADGWeaning
            },
            {
                "category": "Post-Weaning",
                "income": @Model.ADGPostWeaning,
                "expenses": @Model.allADGPostWeaning
            },
            {
                "category": "Post-Weaning(Male)",
                "income": @Model.maleADGPostWeaning,
                "expenses": @Model.allMaleADGPostWeaning
            },
            {
                "category": "Post-Weaning(Female)",
                "income": @Model.femaleADGPostWeaning,
                "expenses": @Model.allFemaleADGPostWeaning
            }
        ]
    });
});
</script>
