@model goatMGMT.Models.SummaryViewModel
@using System.Web.Mvc;

@{
    ViewBag.Title = "Herd Summary";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="container">

    <h2 style="margin-bottom:15px;">Herd Summary</h2>
    @Html.ActionLink("Export to Excel", "Export", "Home", new{}, new{@class="btn btn-success", @style=""})
    <p style="margin-bottom:15px;">Download an excel sheet with all of your information filled in</p>
    
    <div class="control-group" style="padding-top: 15px; padding-bottom: 15px;">
        @Html.LabelFor(m => m.graphAnswer, new { @class = "control-label" })
        <div class="controls">
            @Html.DropDownListFor(m => m.graphAnswer, (IEnumerable<SelectListItem>)ViewData["GraphList"], "Select a category", new { @class = "form-control" })
        </div>
    </div>
    
    <div class="control-group" style="padding-top: 15px; padding-bottom: 15px;">
        @Html.LabelFor(m => m.stringBreedCode, new { @class = "control-label" })
        <div class="controls">
            @Html.DropDownListFor(m => m.stringBreedCode, (IEnumerable<SelectListItem>)ViewData["breedList"], "Select a breed to compare", new { @class = "form-control" })
        </div>
    </div>

    <div class="row">
        <div class="col-md-12">
            <h4><span id="graph1Title"></span></h4>
            <div id="graph1" style="width: 100%; font-size:12px; height:250px; margin-bottom:15px; display:none;"></div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-12">
            <h4><span id="graph2Title"></span></h4>
            <div id="graph2" style="width: 100%; font-size:12px; height:250px; margin-bottom:15px; display:none;"></div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-12">
            <h4><span id="graph3Title"></span></h4>
            <div id="graph3" style="width: 100%; font-size:12px; height:250px; margin-bottom:15px; display:none;"></div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-12">
            <h4><span id="graph4Title"></span></h4>
            <div id="graph4" style="width: 100%; font-size:12px; height:250px; margin-bottom:15px; display:none;"></div>
        </div>
    </div>
</div>
<script type="text/javascript" src="http://www.amcharts.com/lib/3/amcharts.js"></script>
<script type="text/javascript" src="http://www.amcharts.com/lib/3/serial.js"></script>
<script type="text/javascript" src="http://www.amcharts.com/lib/3/themes/none.js"></script>
<script type="text/javascript" src="http://www.amcharts.com/lib/3/pie.js"></script>
<script type="text/javascript">
    $('document').ready( function() {
        var myArray = [,];
        @foreach (var d in Model.myArray)
        {
            @:myArray.push("@d");
                }
       
    });
    $('#stringBreedCode').change( function() {
        breedCode = parseInt($('#stringBreedCode').val());
    });
    function adgGraph () {
        var chart = AmCharts.makeChart("graph1", {
            "type": "serial",
            "theme": "none",
            "legend": {
                "horizontalGap": 10,
                "useGraphSettings": true,
                "markerSize": 10
            },
            "dataProvider": [{
                "category": "Weaning ADG",
                "allHerd": $('#allArray').get($('#breedCode').val(), 0),
                "myHerd": $('#myArray').get($('#breedCode').val(), 0),
            }, {
                "category": "Weaning ADG (Male)",
                "allHerd": $('#allArray').get($('#breedCode').val(), 1),
                "myHerd": $('#myArray').get($('#breedCode').val(), 1),
            }, {
                "category": "Weaning ADG (Female)",
                "allHerd": $('#allArray').get($('#breedCode').val(), 2),
                "myHerd": $('#myArray').get($('#breedCode').val(), 2),
            }, {
                "category": "Post-Weaning ADG",
                "allHerd": $('#allArray').get($('#breedCode').val(), 3),
                "myHerd": $('#myArray').get($('#breedCode').val(), 3),
            }, {
                "category": "Post-Weaning ADG (Male)",
                "allHerd": $('#allArray').get($('#breedCode').val(), 4),
                "myHerd": $('#myArray').get($('#breedCode').val(), 4),
            }, {
                "category": "Post-Weaning ADG (Female)",
                "allHerd": $('#allArray').get($('#breedCode').val(), 5),
                "myHerd": $('#myArray').get($('#breedCode').val(), 5),
            }],
            "legend" : [{
                "title":"first",
                "color":"#CC0000"
            }, {
                "title":"second",
                "color":"#00CC00"
            }],
            "valueAxes": [{
                "unit": "lbs",
                "position": "left",
                "title": "ADG (lbs)",
            }],
            "startDuration": 1,
            "graphs": [{
                "balloonText": "All Herd's [[category]] : <b>[[value]]</b>",
                "fillAlphas": 0.9,
                "lineAlpha": 0.2,
                "title": "All Herd's Average",
                "type": "column",
                "valueField": "allHerd"
            }, {
                "balloonText": "My Herd's [[category]] : <b>[[value]]</b>",
                "fillAlphas": 0.9,
                "lineAlpha": 0.2,
                "title": "My Herd's Average",
                "type": "column",
                "clustered":false,
                "columnWidth":0.5,
                "valueField": "myHerd"
            }],
            "plotAreaFillAlphas": 0.1,
            "categoryField": "category",
            "categoryAxis": {
                "gridPosition": "start"
            },
            "export": {
                "enabled": true,
                "libs": {
                    "path": "http://www.amcharts.com/lib/3/plugins/export/libs/"
                }
            }
        });
    }
    function totalActiveGraph() {
        var chart = AmCharts.makeChart( "graph2", {
            "type": "serial",
            "theme": "light",
            "depth3D": 20,
            "angle": 30,
            "legend": {
                "horizontalGap" : 10,
                "useGraphSettings": true,
                "markerSize" : 10,
            },
            "dataProvider": [ {
                "year": "Total",
                "europe": @Model.totalSire,
                "namerica": @Model.totalDam,
            }, {
                "year": "Active",
                "europe": @Model.activeSire,
                "namerica": @Model.activeDam,
            } ],
            "valueAxes": [ {
                "stackType": "regular",
                "axisAlpha": 0,
                "gridAlpha": 0
            } ],
            "graphs": [ {
                "balloonText": "<b>[[title]]</b><br><span style='font-size:14px'>[[category]]: <b>[[value]]</b></span>",
                "fillAlphas": 0.8,
                "labelText": "[[value]]",
                "lineAlpha": 0.3,
                "title": "Sire",
                "type": "column",
                "color": "#000000",
                "valueField": "europe"
            }, {
                "balloonText": "<b>[[title]]</b><br><span style='font-size:14px'>[[category]]: <b>[[value]]</b></span>",
                "fillAlphas": 0.8,
                "labelText": "[[value]]",
                "lineAlpha": 0.3,
                "title": "Dam",
                "newStack": true,
                "type": "column",
                "color": "#000000",
                "valueField": "namerica"
            } ],
            "categoryField": "year",
            "categoryAxis": {
                "gridPosition": "start",
                "axisAlpha": 0,
                "gridAlpha": 0,
                "position": "left"
            },
            "export": {
                "enabled": true,
                "libs": {
                    "path": "http://www.amcharts.com/lib/3/plugins/export/libs/"
                }
            }

        } );
    }
    function bornWeanedGraph() {
        var chart = AmCharts.makeChart( "graph1", {
            "type": "pie",
            "theme": "none",
            "legend": {
                "markerType": "circle",
                "position": "right",
                "marginRight": 80,
                "autoMargins": false
            },
            "dataProvider": [ {
                "country": "Sire",
                "litres": @Model.numberBorn,
            },  ],
            "valueField": "litres",
            "titleField": "country",
            "balloonText": "[[title]]<br><span style='font-size:14px'><b>[[value]]</b> ([[percents]]%)</span>",
            "export": {
                "enabled": true,
                "libs": {
                    "path": "http://www.amcharts.com/lib/3/plugins/export/libs/"
                }
            }
        } );
        var chart2 = AmCharts.makeChart( "graph2", {
            "type": "pie",
            "theme": "none",
            "legend": {
                "markerType": "circle",
                "position": "right",
                "marginRight": 80,
                "autoMargins": false
            },
            "dataProvider": [ {
                "country": "Sire",
                "litres": @Model.numberWeaned,
            }, ],
            "valueField": "litres",
            "titleField": "country",
            "balloonText": "[[title]]<br><span style='font-size:14px'><b>[[value]]</b> ([[percents]]%)</span>",
            "export": {
                "enabled": true,
                "libs": {
                    "path": "http://www.amcharts.com/lib/3/plugins/export/libs/"
                }
            }
        } );
    }

    function bornWeaningWeightGraph() {
        var chart3 = AmCharts.makeChart( "graph3", {
            "type": "serial",
            "theme": "light",
            "depth3D": 20,
            "angle": 30,
            "legend": {
                "horizontalGap": 10,
                "useGraphSettings": true,
                "markerSize": 10
            },
            "dataProvider": [ {
                "year": "Birth",
                "europe": @Model.avgBW,
                "namerica": @Model.maleAvgBW,
                "lamerica": @Model.femaleAvgBW,
            }, {
                "year": "Weaning",
                "europe": @Model.avgWW,
                "namerica": @Model.maleAvgWW,
                "lamerica": @Model.femaleAvgWW,
            } ],
            "valueAxes": [ {
                "stackType": "regular",
                "axisAlpha": 0,
                "gridAlpha": 0
            } ],
            "graphs": [ {
                "balloonText": "<b>[[title]]</b><br><span style='font-size:14px'>[[category]]: <b>[[value]]</b></span>",
                "fillAlphas": 0.8,
                "labelText": "[[value]]",
                "lineAlpha": 0.3,
                "title": "Average",
                "type": "column",
                "color": "#000000",
                "valueField": "europe"
            }, {
                "balloonText": "<b>[[title]]</b><br><span style='font-size:14px'>[[category]]: <b>[[value]]</b></span>",
                "fillAlphas": 0.8,
                "labelText": "[[value]]",
                "lineAlpha": 0.3,
                "title": "Male",
                "newStack": true,
                "type": "column",
                "color": "#000000",
                "valueField": "namerica"
            }, {
                "balloonText": "<b>[[title]]</b><br><span style='font-size:14px'>[[category]]: <b>[[value]]</b></span>",
                "fillAlphas": 0.8,
                "labelText": "[[value]]",
                "lineAlpha": 0.3,
                "title": "Female",
                "newStack": true,
                "type": "column",
                "color": "#000000",
                "valueField": "lamerica"
            } ],
            "categoryField": "year",
            "categoryAxis": {
                "gridPosition": "start",
                "axisAlpha": 0,
                "gridAlpha": 0,
                "position": "left"
            },
            "export": {
                "enabled": true,
                "libs": {
                    "path": "http://www.amcharts.com/lib/3/plugins/export/libs/"
                }
            }

        } );
    }
    function matingBirthGraph() {
        var chart5 = AmCharts.makeChart("graph1", {
            "type": "serial",
            "pathToImages": "http://cdn.amcharts.com/lib/3/images/",
            "categoryField": "category",
            "rotate": true,
            "startDuration": 1,
            "categoryAxis": {
                "gridPosition": "start",
                "position": "left"
            },
            "trendLines": [],
            "graphs": [
                {
                    "balloonText": "Matings:[[value]]",
                    "fillAlphas": 0.8,
                    "id": "AmGraph-1",
                    "lineAlpha": 0.2,
                    "title": "Income",
                    "type": "column",
                    "valueField": "income"
                },
                {
                    "balloonText": "Offspring:[[value]]",
                    "fillAlphas": 0.8,
                    "id": "AmGraph-2",
                    "lineAlpha": 0.2,
                    "title": "Expenses",
                    "type": "column",
                    "valueField": "expenses"
                }
            ],
            "guides": [],
            "valueAxes": [
                {
                    "id": "ValueAxis-1",
                    "position": "top",
                    "axisAlpha": 0
                }
            ],
            "allLabels": [],
            "amExport": {
                "right": 20,
                "top": 20
            },
            "balloon": {},
            "titles": [],
            "dataProvider": [
                {
                    "category": "Results",
                    "income": @Model.matingCount,
                    "expenses": @Model.kiddingCount,
                }
            ]
        });
    }
    function survivalRateGraph() {
        var chart6 = AmCharts.makeChart("graph2", {
            "type": "serial",
            "pathToImages": "http://cdn.amcharts.com/lib/3/images/",
            "categoryField": "category",
            "rotate": true,
            "startDuration": 1,
            "categoryAxis": {
                "gridPosition": "start",
                "position": "left"
            },
            "trendLines": [],
            "graphs": [
                {
                    "balloonText": "Born:[[value]]",
                    "fillAlphas": 0.8,
                    "id": "AmGraph-1",
                    "lineAlpha": 0.2,
                    "title": "Income",
                    "type": "column",
                    "valueField": "income"
                },
                {
                    "balloonText": "Alive:[[value]]",
                    "fillAlphas": 0.8,
                    "id": "AmGraph-2",
                    "lineAlpha": 0.2,
                    "title": "Expenses",
                    "type": "column",
                    "valueField": "expenses"
                }
            ],
            "guides": [],
            "valueAxes": [
                {
                    "id": "ValueAxis-1",
                    "position": "top",
                    "axisAlpha": 0
                }
            ],
            "allLabels": [],
            "amExport": {
                "right": 20,
                "top": 20
            },
            "balloon": {},
            "titles": [],
            "dataProvider": [
                {
                    "category": "Offspring",
                    "income": @Model.kidsBornCount,
                    "expenses": @Model.kidsAliveCount,
                }
            ]
        });
    }
    function parityBirthWeightGraph() {
        var chart7 = AmCharts.makeChart("graph3", {
            "type": "serial",
            "pathToImages": "http://cdn.amcharts.com/lib/3/images/",
            "categoryField": "category",
            "rotate": true,
            "startDuration": 1,
            "categoryAxis": {
                "gridPosition": "start",
                "position": "left"
            },
            "trendLines": [],
            "graphs": [
                {
                    "balloonText": "Dams:[[value]]",
                    "fillAlphas": 0.8,
                    "id": "AmGraph-1",
                    "lineAlpha": 0.2,
                    "title": "Income",
                    "type": "column",
                    "valueField": "income"
                },
                {
                    "balloonText": "Avg Birth Weight:[[value]]",
                    "fillAlphas": 0.8,
                    "id": "AmGraph-2",
                    "lineAlpha": 0.2,
                    "title": "Expenses",
                    "type": "column",
                    "valueField": "expenses"
                }
            ],
            "guides": [],
            "valueAxes": [
                {
                    "id": "ValueAxis-1",
                    "position": "top",
                    "axisAlpha": 0
                }
            ],
            "allLabels": [],
            "amExport": {
                "right": 20,
                "top": 20
            },
            "balloon": {},
            "titles": [],
            "dataProvider": [
                {
                    "category": "1",
                    "income": @Model.damParity1Count,
                    "expenses": @Model.damParity1BW,
                },
                {
                    "category": "2",
                    "income": @Model.damParity2Count,
                    "expenses": @Model.damParity2BW,
                },
                {
                    "category": "3",
                    "income": @Model.damParity3Count,
                    "expenses": @Model.damParity3BW,
                },
                {
                    "category": "4+",
                    "income": @Model.damParity4Count,
                    "expenses": @Model.damParity4BW
                    }
            ]
        });
    }
    function multipleBirthsGraph() {
        var chart4 = AmCharts.makeChart("graph4", {
            "type": "serial",
            "pathToImages": "http://cdn.amcharts.com/lib/3/images/",
            "categoryField": "category",
            "rotate": true,
            "startDuration": 1,
            "categoryAxis": {
                "gridPosition": "start",
                "position": "left"
            },
            "trendLines": [],
            "graphs": [
                {
                    "balloonText": "Count:[[value]]",
                    "fillAlphas": 0.8,
                    "id": "AmGraph-1",
                    "lineAlpha": 0.2,
                    "title": "Income",
                    "type": "column",
                    "valueField": "income"
                },
                {
                    "balloonText": "Avg Birth Weight:[[value]]",
                    "fillAlphas": 0.8,
                    "id": "AmGraph-2",
                    "lineAlpha": 0.2,
                    "title": "Expenses",
                    "type": "column",
                    "valueField": "expenses"
                },
                 {
                     "balloonText": "Avg Weaning Weight:[[value]]",
                     "fillAlphas": 0.8,
                     "id": "AmGraph-2",
                     "lineAlpha": 0.2,
                     "title": "Expenses",
                     "type": "column",
                     "valueField": "ww"
                 }
            ],
            "guides": [],
            "valueAxes": [
                {
                    "id": "ValueAxis-1",
                    "position": "top",
                    "axisAlpha": 0
                }
            ],
            "allLabels": [],
            "amExport": {
                "right": 20,
                "top": 20
            },
            "balloon": {},
            "titles": [],
            "dataProvider": [
                {
                    "category": "Single",
                    "income": @Model.singleBirthCount,
                    "expenses": @Model.singleBWAvg,
                    "ww": @Model.singleWWAvg
                    },
                {
                    "category": "Twins",
                    "income": @Model.twinBirthCount,
                    "expenses": @Model.twinBWAvg,
                    "ww": @Model.twinWWAvg
                    },
                {
                    "category": "Triplets",
                    "income": @Model.tripletBirthCount,
                    "expenses": @Model.tripletBWAvg,
                    "ww": @Model.tripletWWAvg
                    },
                {
                    "category": "Quad +",
                    "income": @Model.quadBirthCount,
                    "expenses": @Model.quadBWAvg,
                    "ww": @Model.quadWWAvg
                    }
            ]
        });
    }

    $('#graphAnswer').change(function() {
        if($('#graphAnswer').val() == "General") {
            $('#graph1Title').html("Average Daily Gains (ADG)")
            $('#graph1').css('display', 'block')
            adgGraph();
            $('#graph2Title').html("Total/Active Animals")
            $('#graph2').css('display', 'block')
            totalActiveGraph();
            $('#graph3Title').html(" ")
            $('#graph3').css('display', 'none')
            $('#graph4Title').html(" ")
            $('#graph4').css('display', 'none')
        }
        else if ($('#graphAnswer').val() == "Weaning") {
            $('#graph1Title').html("Total Offspring Born")
            $('#graph1').css('display', 'block')
            $('#graph2Title').html("Total Offspring Weaned")
            $('#graph2').css('display', 'block')
            bornWeanedGraph();
            $('#graph3Title').html("Average Birth Weight / Weaning Weight")
            $('#graph3').css('display', 'block')
            bornWeaningWeightGraph();
            $('#graph4Title').html(" ")
            $('#graph4').css('display', 'none')
        }
        else if ($('#graphAnswer').val() == "Birth") {
            $('#graph1Title').html("Mating and Birth Count")
            $('#graph1').css('display', 'block')
            matingBirthGraph();
            $('#graph2Title').html("Birth Survival Rate")
            $('#graph2').css('display', 'block')
            survivalRateGraph();
            $('#graph3Title').html("Dam Parity Count and Average Birth Weight")
            $('#graph3').css('display', 'block')
            parityBirthWeightGraph();
            $('#graph4Title').html("Multiple Births")
            $('#graph4').css('display', 'block')
            multipleBirthsGraph();
        }
    });
</script>
