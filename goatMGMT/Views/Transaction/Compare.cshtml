@model IEnumerable<goatMGMT.Models.Transaction>

    @{
    ViewBag.Title = "Compare Transactions";
    Layout = "~/Views/Shared/_Layout.cshtml";
    }
    <div class="container">
        <h2>Compare Transactions</h2>
        @Html.ActionLink("Back", "Index", "Associate", new { @class="btn btn-warning" , @style="margin-top:15px;"})
        @*<div class="table-responsive">
            <table class="table table-striped highchart">
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.type)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.item_type)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.quantity)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.unit_price)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.total_payment)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.notes)
                    </th>
                    <th></th>
                </tr>

                @foreach (var item in Model) {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.item_detail)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.item_type)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.quantity)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.unit_Price)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.total_Payment)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.notes)
                    </td>
                    <td>
                        @Html.ActionLink("Edit", "Edit", new { id=item.id }) |
                        @Html.ActionLink("Details", "Details", new { id=item.id }) |
                        @Html.ActionLink("Delete", "Delete", new { id=item.id })
                    </td>
                </tr>
                }

            </table>
        </div>*@
<div id="chartdiv" style="margin-bottom:15px;"></div>
    </div>
<script type="text/javascript" src="http://www.amcharts.com/lib/3/amcharts.js"></script>
<script type="text/javascript" src="http://www.amcharts.com/lib/3/serial.js"></script>
<script type="text/javascript" src="http://www.amcharts.com/lib/3/themes/light.js"></script>
<script type="text/javascript">
    $(document).ready(function () {
        
        var chart = AmCharts.makeChart("chartdiv", {
            "type": "serial",
            "theme": "light",
            "dataProvider": [{
                "cost": "Feed",
                "amount": 500
            }, {
                "cost": "Hay",
                "amount": 500
            }, {
                "cost": "Lumber",
                "amount": 4725
            }, {
                "cost": "Water",
                "amount": 3000
            }, {
                "cost": "Nails",
                "amount": 225
            }],
            "valueAxes": [{
                "gridColor": "#FFFFFF",
                "gridAlpha": 0.2,
                "dashLength": 0
            }],
            "gridAboveGraphs": true,
            "startDuration": 1,
            "graphs": [{
                "balloonText": "[[category]]: <b>[[value]]</b>",
                "fillAlphas": 0.8,
                "lineAlpha": 0.2,
                "type": "column",
                "valueField": "amount"
            }],
            "chartCursor": {
                "categoryBalloonEnabled": false,
                "cursorAlpha": 0,
                "zoomable": false
            },
            "depth3D": 20,
            "angle": 30,
            "chartCursor": {
                "categoryBalloonEnabled": false,
                "cursorAlpha": 0,
                "zoomable": false
            },
            "categoryField": "cost",
            "categoryAxis": {
                "gridPosition": "start",
                "gridAlpha": 0,
                "tickPosition": "start",
                "tickLength": 20
            },
            "exportConfig": {
                "menuTop": 0,
                "menuItems": [{
                    "icon": '/lib/3/images/export.png',
                    "format": 'png'
                }]
            }
        });
    });
</script>